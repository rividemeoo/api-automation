pipeline {
    agent any
    
    environment {
        ENV_VARIABLE_NAME = 'PYTHON_ENVIRONMENT'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], 
                          userRemoteConfigs: [[url: 'https://github.com/rividemeoo/api-automation.git']]])
            }
        }

        stage('Run PowerShell Script') {
            steps {
                script {  
                    def inputFile = "${env.WORKSPACE}\\Python\\tests\\config.py"
                    def envVarValue = env.ENV_VARIABLE_NAME ?: null  // Assigning the environment variable value

                    powershell '''
                    $workspacePath = $env:WORKSPACE
                    $replacementValue = "engr.properties"

                    if ($envVarValue -ne $null) {
                        $replacementValue = "${envVarValue}.properties"
                    }

                    (Get-Content $inputFile) | ForEach-Object {
                        $_ -replace "test\\.properties", $replacementValue
                    } | Set-Content $inputFile

                    echo "Replacement complete."
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                bat 'python -m pip install -r requirements.txt'
            }
        }
        
        stage('Test') {
            steps {
                bat 'python -m pytest'
            }
        }
        
        // Add more stages as needed
        
    }

    post {
        failure {
            script {
                def failedStages = currentBuild.rawBuild.getExecutor().getOwner().getStages().findAll { it.getResult().isWorseThan(hudson.model.Result.SUCCESS) }
                def stageDetails = failedStages.collect { "Stage: ${it.getName()}, Status: ${it.getStatus()}" }.join('\n')

                emailext subject: "Build Failed: ${currentBuild.fullDisplayName}",
                        body: """
                        Build Failed: ${currentBuild.fullDisplayName}
                        Check the console output for details.

                        Failed Stages:
                        ${stageDetails}
                        """,
                        to: 'test_jenkins_email@loopup.co'
            }
        }
    }
}