pipeline {
    agent any
    
    environment {
        envVarValue = "env.PYTHON_ENVIRONMENT"
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], 
                          userRemoteConfigs: [[url: 'https://github.com/rividemeoo/api-automation.git']]])
            }
        }

        stage('Run PowerShell Script') {
            steps { 
                    powershell '''
                    $inputFile = "${env.JENKINS_HOME}\\Python\\tests\\config.py"
                    $replacementValue = "engr.properties"

                    (Get-Content $inputFile) | ForEach-Object {
                        if ($envVarValue -ne $null){
                        $_ -replace "test\\.properties", $envVarValue.properties
                        }
                        else{
                        $_ -replace "test\\.properties", $replacementValue
                        }
                    } | Set-Content $inputFile

                    echo "Replacement complete."
                    echo ${env.WORKSPACE}
                    '''
            }
        }

        stage('Build') {
            steps {
                bat 'python -m pip install -r requirements.txt'
            }
        }
        
        stage('Test') {
            steps {
                bat 'python -m pytest'
            }
        }
        
        // Add more stages as needed
        
    }

    post {
        failure {
            emailext subject: "Build Failed: ${currentBuild.fullDisplayName}",
                    body: """
                    Build Failed: ${currentBuild.fullDisplayName}
                    Check the console output for details.
                    """,
                    to: 'test_jenkins_email@loopup.co',
                    replyTo: 'noreply@loopup.co'
                }
    }
}