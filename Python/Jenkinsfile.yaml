pipeline {
    agent any
    
    environment {
        ENV_VARIABLE_NAME = 'PYTHON_ENVIRONMENT'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], 
                          userRemoteConfigs: [[url: 'https://github.com/rividemeoo/api-automation.git']]])
            }
        }

        stage('Run PowerShell Script') {
            steps {
                def inputFile = "${env.WORKSPACE}\\Python\\tests\\config.py"

                powershell '''
                if ($envVarValue -eq $null) 
                {
                        $replacementValue = "${envVarValue}.properties"
                } 
                else 
                {
                        $replacementValue = "engr.properties"
                }
                $workspacePath = env.WORKSPACE
                $envVarValue = $env:ENV_VARIABLE_NAME
                $replacementValue = "${envVarValue}.properties"
                (Get-Content $inputFile) | ForEach-Object {
                    $_ -replace "test\\.properties", $replacementValue
                } | Set-Content $inputFile
                echo "Replacement complete."
                '''
            }
        }

        stage('Build') {
            steps {
                bat 'python -m pip install -r requirements.txt'
            }
        }
        
        stage('Test') {
            steps {
                bat 'python -m pytest'
            }
        }
        
        // Add more stages as needed
        
    }

    post {
        failure {
            emailext subject: "Build Failed: ${currentBuild.fullDisplayName}",
                    body: """
                    <p>Build Failed: ${currentBuild.fullDisplayName}</p>
                    <p>Check the console output for details.</p>
                    """,
                    to: 'test_jenkins_email@loopup.co',
                    replyTo: 'noreply@loopup.co'
                }
    }
}