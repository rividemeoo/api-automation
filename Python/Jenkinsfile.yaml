pipeline {
    agent any
    
    environment {
        recipientEmails = "test_jenkins@loopup.co"
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], 
                          userRemoteConfigs: [[url: 'https://github.com/rividemeoo/api-automation.git']]])
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Running the python requirements..'
                bat 'docker build --pull --rm -f "Python\\Dockerfile" -t test_doc_image "Python"'
            }
        }
        
        stage('Running Docker Image and Container') {
            steps {
                bat 'docker run -d --name test_doc_container -e PYTHON_ENVIRONMENT=engr test_doc_image'
                powershell '''
                    $timeout = 120
                    $startTime = Get-Date

                    while ($true) {
                        $status = docker inspect -f "{{.State.Status}}" test_doc_container
                        Write-Host "Container status: $status"
                        
                        if ($status -eq "running") {
                            Write-Host "Container is running."
                        } else {
                            Write-Host "Container is no longer running."
                            break
                        }
                        
                        $elapsedTime = (Get-Date) - $startTime
                        if ($elapsedTime.TotalSeconds -ge $timeout) {
                            Write-Host "Timed out waiting for the container to start."
                            exit 1
                        }
                        
                        Start-Sleep -Seconds 5
                    }
                '''
            }
        }

        // stage('Delete Docker Container and Image') {
        //     steps {
        //         bat 'docker rm -f test_doc_container'
        //         bat 'docker rmi -f test_doc_image'
        //     }
        // }
    }
         
    post {
        failure {
            emailext subject: "Build Failed: ${currentBuild.fullDisplayName}",
                    body: """
                    Build Failed: ${currentBuild.fullDisplayName}
                    Check the console output for details.
                    """,
                    to: "${recipientEmails}",
                    replyTo: 'noreply@loopup.co',
                    attachLog: true
                }
    }
}