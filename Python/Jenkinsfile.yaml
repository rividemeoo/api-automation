pipeline {
    agent any
    
    environment {
        recipientEmails = "test_jenkins@loopup.co"
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], 
                          userRemoteConfigs: [[url: 'https://github.com/rividemeoo/api-automation.git']]])
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Running the python requirements..'
                bat 'docker build --pull --rm -f "Python\\Dockerfile" -t test_doc_image "Python"'
            }
        }
        
        stage('Running Docker Image and Container') {
            steps {
                bat 'docker run -d --name test_doc_container -e PYTHON_ENVIRONMENT=engr test_doc_image'

                // Wait for the container to be in a running state
            script {
                def timeout = 120  // Maximum time to wait in seconds
                def startTime = currentBuild.startTimeInMillis
                
                while (true) {
                    def status = bat(
                        script: 'docker inspect -f \"{{.State.Status}}\" test_doc_container',
                        returnStatus: true
                    )
                    echo status
                    if (status == 'running') {
                    echo "Container is running."
                        } else {
                            echo "Container is no longer running."
                            break  // Exit the loop if the container is not running anymore
                        }
                        
                        def elapsedTime = (currentBuild.startTimeInMillis - startTime) / 1000
                        
                        if (elapsedTime >= timeout) {
                            error "Timed out waiting for the container to start."
                        }
                        
                        sleep 5  // Wait for a short interval before checking again
                    }
                }
            }
        }

        // stage('Delete Docker Container and Image') {
        //     steps {
        //         bat 'docker rm -f test_doc_container'
        //         bat 'docker rmi -f test_doc_image'
        //     }
        // }
    }
         
    post {
        failure {
            emailext subject: "Build Failed: ${currentBuild.fullDisplayName}",
                    body: """
                    Build Failed: ${currentBuild.fullDisplayName}
                    Check the console output for details.
                    """,
                    to: "${recipientEmails}",
                    replyTo: 'noreply@loopup.co',
                    attachLog: true
                }
    }
}